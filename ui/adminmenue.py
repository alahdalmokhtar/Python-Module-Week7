# Form implementation generated from reading ui file 'AdminMenue.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
""" 

from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_adminmenue(object):
    def setupUi(self, adminmenue):
        adminmenue.setObjectName("adminmenue")
        adminmenue.resize(800, 492)
        adminmenue.setStyleSheet("font: 700 10pt \"Times New Roman\";\n"
"background-color: rgb(170, 170, 170);")
        self.centralwidget = QtWidgets.QWidget(parent=adminmenue)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 0, 731, 111))
        self.label.setText("")
        self.label.setTextFormat(QtCore.Qt.TextFormat.MarkdownText)
        self.label.setPixmap(QtGui.QPixmap("C:/Users/eng.alahdal/Downloads/logo-1.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 140, 781, 81))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.pushButton_2.setStyleSheet("font: 700 10pt \"Times New Roman\";\n"
"background-color: rgb(156, 156, 156);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.pushButton_3.setStyleSheet("font: 700 10pt \"Times New Roman\";\n"
"background-color: rgb(156, 156, 156);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.pushButton = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.pushButton.setStyleSheet("font: 700 10pt \"Times New Roman\";\n"
"background-color: rgb(156, 156, 156);")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.pushButton_4.setStyleSheet("font: 700 10pt \"Times New Roman\";\n"
"background-color: rgb(156, 156, 156);")
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(280, 80, 151, 79))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(198, 0, 99);")
        self.label_2.setObjectName("label_2")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(50, 240, 701, 192))
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 700 10pt \"Times New Roman\";")
        self.tableWidget.setRowCount(1)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(116, 116, 116))
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(116, 116, 116))
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(116, 116, 116))
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(116, 116, 116))
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(150)
        adminmenue.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=adminmenue)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        adminmenue.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=adminmenue)
        self.statusbar.setObjectName("statusbar")
        adminmenue.setStatusBar(self.statusbar)

        self.retranslateUi(adminmenue)
        QtCore.QMetaObject.connectSlotsByName(adminmenue)
        #self.lineEdit.textChanged.connect(self.search_action)# connect text change to search action
        self.pushButton_2.clicked.connect(self.Activity_Control_action)
        self.pushButton_3.clicked.connect(self.Preference_Admin_Menue_action)
        self.pushButton.clicked.connect(self.send_mail_action)
        self.pushButton_4.clicked.connect(adminmenue.close)

    def retranslateUi(self, adminmenue):
        _translate = QtCore.QCoreApplication.translate
        adminmenue.setWindowTitle(_translate("adminmenue", "Admin Menue"))
        self.pushButton_2.setText(_translate("adminmenue", "Activity Control"))
        self.pushButton_3.setText(_translate("adminmenue", "Preference Admin Menue"))
        self.pushButton.setText(_translate("adminmenue", "Send Mail"))
        self.pushButton_4.setText(_translate("adminmenue", "Exit"))
        self.label_2.setText(_translate("adminmenue", "CRM(Admin Menue Page)"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("adminmenue", "Activity Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("adminmenue", "Start Time"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("adminmenue", "Participant Mail"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("adminmenue", "Organizer Mail"))

    def  Activity_Control_action(self):
        print("Activity Control")
        QtWidgets.QMessageBox.information(None, "Activity Control", "")
    def Preference_Admin_Menue_action(self):
        print("Preference Admin Menue")
        self.admin_window = self.load_ui_file("AdminMenue.ui")
        if self.admin_window:
            self.admin_window.show()
    def send_mail_action(self):
        print("Send Mail")
        QtWidgets.QMessageBox.information(None, "Send Mail", "")
  


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    adminmenue = QtWidgets.QMainWindow()
    ui = Ui_adminmenue()
    ui.setupUi(adminmenue)
    adminmenue.show()
    sys.exit(app.exec()) """
import sys
import os
import datetime
from PyQt6 import QtCore, QtGui, QtWidgets
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
import smtplib
from email.mime.text import MIMEText
from preferencesadmin import PreferencesAdminWindow

SCOPES = ['https://www.googleapis.com/auth/calendar.readonly']

class Ui_adminmenue(object):
    def setupUi(self, adminmenue):
        adminmenue.setObjectName("adminmenue")
        adminmenue.resize(800, 492)
        adminmenue.setStyleSheet("font: 700 10pt \"Times New Roman\";\n"
                                 "background-color: rgb(170, 170, 170);")

        self.centralwidget = QtWidgets.QWidget(parent=adminmenue)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 0, 731, 111))
        self.label.setPixmap(QtGui.QPixmap('ui/logo-1.png'))
        self.label.setScaledContents(True)

        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 140, 781, 81))
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)

        self.pushButton_2 = QtWidgets.QPushButton("Activity Control", parent=self.horizontalLayoutWidget)
        self.pushButton_3 = QtWidgets.QPushButton("Preference Admin Menue", parent=self.horizontalLayoutWidget)
        self.pushButton = QtWidgets.QPushButton("Send Mail", parent=self.horizontalLayoutWidget)
        self.pushButton_4 = QtWidgets.QPushButton("Exit", parent=self.horizontalLayoutWidget)

        for btn in [self.pushButton_2, self.pushButton_3, self.pushButton, self.pushButton_4]:
            btn.setStyleSheet("background-color: rgb(156, 156, 156);")

        self.horizontalLayout.addWidget(self.pushButton_2)
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.horizontalLayout.addWidget(self.pushButton)
        self.horizontalLayout.addWidget(self.pushButton_4)

        self.label_2 = QtWidgets.QLabel("CRM(Admin Menue Page)", parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(280, 80, 151, 79))
        self.label_2.setStyleSheet("color: rgb(198, 0, 99);")

        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(50, 240, 701, 192))
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setHorizontalHeaderLabels(["Activity Name", "Start Time", "Participant Mail", "Organizer Mail"])
        self.tableWidget.horizontalHeader().setDefaultSectionSize(150)

        adminmenue.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(adminmenue)
        self.statusbar = QtWidgets.QStatusBar(adminmenue)
        adminmenue.setMenuBar(self.menubar)
        adminmenue.setStatusBar(self.statusbar)

        # Connections
        self.pushButton_2.clicked.connect(self.load_calendar_events)
        self.pushButton.clicked.connect(self.send_mails)
        self.pushButton_4.clicked.connect(QtWidgets.QApplication.quit)
        self.pushButton_3.clicked.connect(self.preference_Admin_Menue_action)
        #self.pushButton_2.clicked.connect(self.Activity_Control_action)

    def preference_Admin_Menue_action(self):
        from preferencesadmin import PreferencesAdminWindow  # Move import here
        self.pref_window = PreferencesAdminWindow()
        self.pref_window.show()
        
    def get_authenticated_service(self):
        creds = None
        if os.path.exists('token.json'):
            creds = Credentials.from_authorized_user_file('token.json', SCOPES)
        if not creds or not creds.valid:
            if creds and creds.expired and creds.refresh_token:
                creds.refresh(Request())
            else:
                flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)
                creds = flow.run_local_server(port=0)
            with open('token.json', 'w') as token:
                token.write(creds.to_json())
        return build('calendar', 'v3', credentials=creds)

    def load_calendar_events(self):
        try:
            service = self.get_authenticated_service()
            now = datetime.datetime.utcnow().isoformat() + 'Z'
            events_result = service.events().list(
                calendarId='primary', timeMin=now,
                maxResults=10, singleEvents=True, orderBy='startTime'
            ).execute()

            events = events_result.get('items', [])
            self.tableWidget.setRowCount(len(events))

            for row, event in enumerate(events):
                summary = event.get('summary', 'No title')
                start = event['start'].get('dateTime', event['start'].get('date'))
                attendees = event.get('attendees', [])
                attendee_email = attendees[0]['email'] if attendees else 'No attendee'
                organizer_email = event.get('organizer', {}).get('email', 'Unknown')

                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(summary))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(start))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(attendee_email))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(organizer_email))

        except HttpError as e:
            QtWidgets.QMessageBox.critical(None, "API Error", str(e))
        except Exception as e:
            QtWidgets.QMessageBox.critical(None, "Error", str(e))

    def send_mails(self):
        for row in range(self.tableWidget.rowCount()):
            email_item = self.tableWidget.item(row, 2)
            name_item = self.tableWidget.item(row, 0)
            time_item = self.tableWidget.item(row, 1)
            if email_item and name_item and time_item:
                to_email = email_item.text()
                subject = f"Reminder: {name_item.text()}"
                body = f"""Dear participant,

This is a reminder for the event:
Event: {name_item.text()}
Time: {time_item.text()}
Organizer: {email_item.text()}

Please make sure to attend.

Best regards,
Event Management System
"""

                self.send_email(to_email, subject, body)

        QtWidgets.QMessageBox.information(None, "Success", "Emails sent successfully.")

    def send_email(self, to_email, subject, body):
        try:
            sender = "alahdalcrm@gmail.com"
            password = "tagm piww bqjg ttyp"

            msg = MIMEText(body)
            msg['Subject'] = subject
            msg['From'] = sender
            msg['To'] = to_email

            with smtplib.SMTP_SSL('smtp.gmail.com', 465) as server:
                server.login(sender, password)
                server.sendmail(sender, [to_email], msg.as_string())
        except Exception as e:
            print(f"Error sending email to {to_email}: {e}")
        self.load_calendar_events()  # ل


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    adminmenue = QtWidgets.QMainWindow()
    ui = Ui_adminmenue()
    ui.setupUi(adminmenue)
    adminmenue.show()
    sys.exit(app.exec())
